{
	env: {
		node: true,
		mocha: true,
		es6: true,
		browser: true
	},
    parser: 'babel-eslint',
	parserOptions: {
		ecmaVersion: 6,
		sourceType: 'module',
		ecmaFeatures: {
			jsx: true
		}
	},
	plugins: [
		'react'
	],
	extends: 'eslint:recommended',
	rules: {
		"comma-spacing": 2, // nr
		"eol-last": 2, // nr
		"eqeqeq": 2, // nr
		"indent": [2, "tab", { "SwitchCase": 1 }], // nr
		"new-parens": 2, // nr
		"no-debugger": 2, 
		"no-dupe-args": 2,
		"no-dupe-keys": 2,
		"no-duplicate-case": 2,
		"no-ex-assign": 2,
		"no-fallthrough": 2,
		//"no-invalid-this": 2, // nr
		"no-multiple-empty-lines": [2, {"max": 1}], // nr
		"no-trailing-spaces": 2, // nr
		"no-undef": 2,
		"no-unreachable": 2,
		"no-unused-vars": [2, {"vars": "all", "args": "after-used"}],
		"prefer-const": 2, // nr
		"quotes": [2, "single", "avoid-escape"], // nr
		"semi": 2, // nr
		"keyword-spacing": 2,
		"space-before-blocks": [2, "always"], // nr
		"space-before-function-paren": [2, "never"], //nr
		"space-infix-ops": 2, // nr
		"strict": [2, "global"], // nr
		"valid-typeof": 2,

        "react/display-name": 0,
        "react/jsx-boolean-value": 2,
        "react/jsx-closing-bracket-location": 0,
        "react/jsx-curly-spacing": [2, "always"],
        "react/jsx-indent-props": 0,
        "react/jsx-max-props-per-line": 0,
        "react/jsx-no-duplicate-props": 2,
        "react/jsx-no-literals": 0,
        "react/jsx-no-undef": 2,
        "react/jsx-quotes": 0,
        "react/jsx-sort-prop-types": 0,
        "react/jsx-sort-props": 0,
        "react/jsx-uses-react": 0,
        "react/jsx-uses-vars": 2,
        "react/no-danger": 0,
        "react/no-did-update-set-state": 2,
        "react/no-direct-mutation-state": 2,
        "react/no-multi-comp": 0,
        "react/no-set-state": 0,
        "react/no-unknown-property": 2,
        "react/prop-types": 1,
        "react/react-in-jsx-scope": 2,
        "react/require-extension": 0,
        "react/self-closing-comp": 2,
        "react/jsx-wrap-multilines": 2,
        "react/sort-comp": [2, {
            "order": [
                "mixins",
                "displayName",
                "propTypes",
                "contextTypes",
                "childContextTypes",
                "statics",
                "defaultProps",
                "constructor",
                "getDefaultProps",
                "getInitialState",
                "getChildContext",
                "componentWillMount",
                "componentDidMount",
                "componentWillReceiveProps",
                "shouldComponentUpdate",
                "componentWillUpdate",
                "componentDidUpdate",
                "componentWillUnmount",
                "/^component.+$/",
                "/^get.+$/",
                "/^on.+$/",
                "everything-else",
                "/^render.+$/",
                "render"
            ]
        }]
	}
}
